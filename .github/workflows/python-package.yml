# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13", "3.14.0a6"]

    steps:
    - uses: actions/checkout@v4
    - name: Install uv and python ${{ matrix.python-version }}
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        cache-local-path: ".uv/cache"

    - name: Install project and dependencies
      run: |
        uv sync --all-extras --dev
    # - name: Generate doc-tests for .md files
    #   run: |
    #     python -m generate_readme_tests
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        uv run pytest
    - name: Type checking
      run: |
        uv run pyright --level=warning
        uv run mypy -p slots_class

  